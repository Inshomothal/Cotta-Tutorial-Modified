{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"../cotta/scripts/main.js","sourcesContent":["import { world, system, BlockLocation, MinecraftBlockTypes, Block, LeverActionEvent } from \"@minecraft/server\";\nimport Utilities from \"./Utilities\";\n\nconst START_TICK = 100;\n\nconst ARENA_X_SIZE = 30;\nconst ARENA_Z_SIZE = 30;\nconst ARENA_X_OFFSET = 0;\nconst ARENA_Y_OFFSET = -60;\nconst ARENA_Z_OFFSET = 0;\n\n//global variables\nlet curTick = 0;\n\nlet score = 0;\nlet cottaX = 0;\nlet cottaZ = 0;\nlet spawnCountdown = 1;\n\nlet pickGrade = 0; //for the pickaxe code\n\nfunction intitializeBreakTheTerracotta() {\n  const overworld = world.getDimension(\"overworld\");\n  //world.say(\"intitializeBreakTheTerracotta has started...\"); //testing the function -> Success!!!\n  overworld.runCommandAsync(\"clear @p\"); //For clearing inventory with debugging\n\n  //catch in case we've already added this score\n  try {\n    //world.say(\"Trying to add a score...\"); //Testing try function -> Success!!!\n    overworld.runCommandAsync('scoreboard objectives add score dummy \"Level\"');\n  } catch (e) {\n    world.say(\"score error:\" + e); //Catching the error\n  }\n\n  //eliminate nearby pesky mobs\n  try {\n    overworld.runCommandAsync(\"kill @e[type=!player]\");\n  } catch (e) {}\n\n  overworld.runCommandAsync(\"scoreboard objectives setdisplay sidebar score\");\n\n  overworld.runCommandAsync(\"give @p diamond_sword\");\n  overworld.runCommandAsync(\"give @p dirt 64\");\n\n  overworld.runCommandAsync(\"scoreboard player set @p score 0\");\n\n  world.say(\"BREAK THE TERRACOTTA\");\n\n  //Making the arena\n\n  Utilities.fillBlock(\n    //Making a clear area\n    MinecraftBlockTypes.air,\n    ARENA_X_OFFSET - ARENA_X_SIZE / 2 + 1,\n    ARENA_Y_OFFSET,\n    ARENA_Z_OFFSET - ARENA_Z_SIZE / 2 + 1,\n    ARENA_X_OFFSET + ARENA_X_SIZE / 2 - 1,\n    ARENA_Y_OFFSET + 10,\n    ARENA_Z_OFFSET + ARENA_Z_SIZE / 2 - 1\n  );\n\n  Utilities.fourWalls(\n    //Creating the Walls\n    MinecraftBlockTypes.cobblestone,\n    ARENA_X_OFFSET - ARENA_X_SIZE / 2,\n    ARENA_Y_OFFSET,\n    ARENA_Z_OFFSET - ARENA_Z_SIZE / 2,\n    ARENA_X_OFFSET + ARENA_X_SIZE / 2,\n    ARENA_Y_OFFSET + 10,\n    ARENA_Z_OFFSET + ARENA_Z_SIZE / 2\n  );\n\n  overworld.runCommandAsync(\n    //Teleporting the players\n    \"tp @p \" + String(ARENA_X_OFFSET - 3) + \" \" + ARENA_Y_OFFSET + \" \" + String(ARENA_Z_OFFSET - 3)\n  );\n}\n\n//This is the function that will run during each tick (20 per second).\n//It's where game logic can get implemented.\nfunction gameTick() {\n  try {\n    //Tested -> world.say(\"trying to run the game...\"); -> Success!!\n    //world.say(\"curTick is \" + curTick);\n\n    if (curTick === START_TICK) {\n      //This is at 100 ticks, which gives Minecraft time to load the world.\n      intitializeBreakTheTerracotta(); //ALWAYS ADD () WITH FUNCTIONS!!!\n      //Tested if logic with -> world.say(\"curTick equals START_TICK!!!\"); -> Success!!!\n    } else {\n      //world.say(\"curTick doesnt equal START_TICK\");\n    }\n\n    curTick++;\n\n    if (curTick > START_TICK && curTick % 20 === 0) {\n      let overworld = world.getDimension(\"overworld\");\n\n      //no terracotta exists, we're waiting to spawn a new one\n      if (spawnCountdown > 0) {\n        spawnCountdown--;\n\n        if (spawnCountdown <= 0) {\n          spawnNewTerracotta();\n        }\n      } else {\n        checkForTerracotta();\n      }\n    }\n\n    let spawnInterval = Math.ceil(200 / ((score + 1) / 3));\n    if (curTick > START_TICK && curTick % spawnInterval === 0) {\n      world.say(\"RELEASE THE FAILURES!!!!\");\n      spawnMobs();\n    }\n\n    //Self-inserted code to give a pickaxe to help break terracotta\n    if (score === 5 && pickGrade === 0) {\n      let overworld = world.getDimension(\"overworld\");\n      overworld.runCommandAsync(\"give @p diamond_pickaxe\");\n      world.say(\"Better dig faster....\");\n      pickGrade++;\n    }\n\n    if (curTick > START_TICK && curTick % 29 === 0) {\n      addFuzzyLeaves();\n    }\n  } catch (e) {\n    console.warn(\"Tick Error: \" + e);\n    world.say(\"error logged in console\");\n  }\n\n  //testing what functions are working...Success!!!\n  //world.say(\"mainTick is working\");\n\n  //Ensures a callback to the gameTick function.\n  system.run(gameTick);\n}\n\nfunction spawnNewTerracotta() {\n  let overworld = world.getDimension(\"overworld\");\n\n  //create a new terracotta\n  cottaX = Math.floor(Math.random() * (ARENA_X_SIZE - 1)) - (ARENA_X_SIZE / 2 - 1);\n  cottaZ = Math.floor(Math.random() * (ARENA_Z_SIZE - 1)) - (ARENA_Z_SIZE / 2 - 1);\n\n  world.say(\"Spawning...\");\n  overworld\n    .getBlock(new BlockLocation(cottaX + ARENA_X_OFFSET, 1 + ARENA_Y_OFFSET, cottaZ + ARENA_Z_OFFSET))\n    .setType(MinecraftBlockTypes.yellowGlazedTerracotta);\n}\n\nfunction checkForTerracotta() {\n  let overworld = world.getDimension(\"overworld\");\n\n  let block = overworld.getBlock(\n    new BlockLocation(cottaX + ARENA_X_OFFSET, 1 + ARENA_Y_OFFSET, cottaZ + ARENA_Z_OFFSET)\n  );\n\n  if (block.type !== MinecraftBlockTypes.yellowGlazedTerracotta) {\n    //we didn't find any terracotta! set a new spawn countdown\n    score++;\n    spawnCountdown = 2;\n    cottaX = -1;\n    overworld.runCommandAsync(\"scoreboard players set @p score \" + score);\n    world.say(\"You broke the terracotta! Creating new ones.\");\n    cottaZ = -1;\n  }\n}\n\nfunction spawnMobs() {\n  let overworld = world.getDimension(\"overworld\");\n\n  //spawn mobs creates about 1-2 mobs\n  let spawnMobCount = Math.floor(Math.random() * 2) + 1;\n\n  for (let j = 0; j <= spawnMobCount; j++) {\n    let zombieX = Math.floor(Math.random() * (ARENA_X_SIZE - 2)) - ARENA_X_SIZE / 2;\n    let zombieZ = Math.floor(Math.random() * (ARENA_Z_SIZE - 2)) - ARENA_Z_SIZE / 2;\n\n    overworld.spawnEntity(\n      \"minecraft:zombie\",\n      new BlockLocation(zombieX + ARENA_X_OFFSET, 1 + ARENA_Y_OFFSET, zombieZ + ARENA_Z_OFFSET)\n    );\n  }\n}\n\nfunction addFuzzyLeaves() {\n  let overworld = world.getDimension(\"overworld\");\n\n  for (let i = 0; i < 10; i++) {\n    const leafX = Math.floor(Math.random() * (ARENA_X_SIZE - 1)) - (ARENA_X_SIZE / 2 - 1);\n    const leafY = Math.floor(Math.random() * 10);\n    const leafZ = Math.floor(Math.random() * (ARENA_Z_SIZE - 1)) - (ARENA_Z_SIZE / 2 - 1);\n\n    overworld\n      .getBlock(new BlockLocation(leafX + ARENA_X_OFFSET, leafY + ARENA_Y_OFFSET, leafZ + ARENA_Z_OFFSET))\n      .setType(MinecraftBlockTypes.leaves);\n  }\n}\n\n//Ensures a callback to the gameTick function.\nsystem.run(gameTick);\n"],"sourceRoot":"../../../scripts/"}